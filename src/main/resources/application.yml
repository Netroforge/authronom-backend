server:
  port: ${AUTHRONOM_SERVER_PORT:8080}

logging:
  level:
    root: INFO
#    org.springframework.security.web.FilterChainProxy: DEBUG

spring:
  application:
    name: ${AUTHRONOM_SERVICE_NAME:authronom-backend}
  session:
    timeout: ${AUTHRONOM_SESSION_TIMEOUT:3h}
    redis:
      flush-mode: on_save
  datasource:
    url: jdbc:postgresql://${AUTHRONOM_PG_HOST:localhost}:${AUTHRONOM_PG_PORT:5432}/${AUTHRONOM_PG_DB:dev_authronom_backend}
    username: ${AUTHRONOM_PG_USER:postgres}
    password: ${AUTHRONOM_PG_PASSWORD:postgres}
    driver-class-name: "org.postgresql.Driver"
    hikari:
      schema: dev_authronom_backend
  flyway:
    enabled: true
    locations: classpath:db/migration
    schemas: ${spring.datasource.hikari.schema}
    default-schema: ${spring.datasource.hikari.schema}
    baseline-on-migrate: true

springdoc:
  show-actuator: true
  show-oauth2-endpoints: true
  security:
    admin-username: ${SPRINGDOC_SECURITY_ADMIN_USERNAME}
    admin-password: ${SPRINGDOC_SECURITY_ADMIN_PASSWORD}

db-scheduler:
  polling-interval: 10s
  shutdown-max-wait: 10m
  heartbeat-interval: 5m
  missed-heartbeats-limit: 6
  check-old-log-records-interval: 1h
  retention-of-log-records: 7d

db-scheduler-ui:
  history: true
  log-limit: 1000
  security:
    admin-username: ${DB_SCHEDULER_UI_SECURITY_ADMIN_USERNAME}
    admin-password: ${DB_SCHEDULER_UI_SECURITY_ADMIN_PASSWORD}

email:
  server: ${AUTHRONOM_EMAIL_SERVER}
  port: ${AUTHRONOM_EMAIL_PORT}
  ssl: ${AUTHRONOM_EMAIL_SSL}
  username: ${AUTHRONOM_EMAIL_USERNAME}
  password: ${AUTHRONOM_EMAIL_PASSWORD}

user:
  registration:
    email-enabled: true
    dangling-confirmation-code-deletion-interval: 5h
    dangling-confirmation-code-retention-threshold: 5h
    confirmation-code-live-time: 5m
    start-user-registration-calls-rate-limit-within-second: 5
    finalize-user-registration-calls-rate-limit-within-second: 5

security:
  bcrypt-password-encoder-strength: 12
  authorization-ttl: 10800000ms
  authorization-consent-ttl: 10800000ms
